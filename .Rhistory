program <- forcats::fct_relevel(program, c("Yes", "No"))
language <- as.character(contacts_unflat$language)
#language <- fct_expand(language, "Did not respond", language_setting)
language <- forcats::fct_recode(language,
MSA = "msa",
ENG = "eng",
FIL = "fil")
language[is.na(language)] <- "Did not respond"
language <- forcats::fct_relevel(language, c("ENG", "MSA", "FIL", "Did not respond"))
df_consent <- data.frame(ID, created_on, program, enrolled, true_consent, language)
df_consent <- df_consent %>%
mutate(consent = ifelse(is.na(true_consent) &  is.na(language), "Did not interact",
ifelse(is.na(true_consent) & !is.na(language), "Did not respond",
ifelse(true_consent == "Yes", "Yes", "No"))))
df_consent$true_consent <- NULL
true_consent <- NULL
df_consent <- df_consent %>%
mutate(consent = forcats::fct_relevel(as.character(consent), c("Yes", "No", "Did not interact", "Did not respond")))
consent <- df_consent$consent
if (length(contacts_unflat$groups) > 0){
row <- 1:length(ID)
} else {
row <- NULL
row <- factor(row)
}
df_created_on <- data.frame(ID, created_on, consent, program, row = row)
if (!is.null(date_from)){
df_created_on <- df_created_on %>%
filter(created_on >= as.Date(date_from))
}
if (!is.null(date_to)){
df_created_on <- df_created_on %>%
filter(created_on >= as.Date(date_to))
}
list_of_ids <- df_created_on %>%
filter(consent == "Yes") %>%
filter(program == "Yes")
list_of_ids <- list_of_ids$ID
# demographics -----------------------------------------------------------------------------
state_of_origin <- as.character(contacts_unflat$fields$state_of_origin)
state_of_origin <- dplyr::recode(state_of_origin, "1" = state_1, "2" = state_2, "3" = state_3, "4" = state_4, "5" = state_5,
"6" = state_6, "7" = state_7, "8" = state_8, "9" = state_9, "10" = state_10, "11" = state_11,
"12" = state_12, "13" = state_13, "14" = state_14, "15" = state_15, "16" = state_16, "17" = state_17)
next_tip_main <- as.numeric(as.character(contacts_unflat$fields$next_tip_main))
next_tip_morning <- as.numeric(as.character(contacts_unflat$fields$next_tip_morning))
next_tip_evening <- as.numeric(as.character(contacts_unflat$fields$next_tip_evening))
parent_gender <- contacts_unflat$fields$gender
parent_gender <- factor(ifelse(parent_gender %in% c("female", "f", "woman", "Woman"), "Woman",
ifelse(parent_gender %in% c("male", "m", "man", "Man"), "Man",
ifelse(parent_gender %in% "no", NA, parent_gender))))
parent_gender <- fct_expand(parent_gender, "Woman", "Man")
parent_gender <- forcats::fct_relevel(parent_gender, c("Woman", "Man"))
child_age_group <- contacts_unflat$fields$age_group_for_tips
know_age_group <- contacts_unflat$fields$know_age_group_for_tips
child_age_group <- ifelse(child_age_group == "child" & know_age_group == "no", "Default", child_age_group)
child_age_group <- factor(child_age_group)
child_age_group <- fct_expand(child_age_group, "Baby", "Child", "Teen", "Default")
child_age_group <- forcats::fct_recode(child_age_group,
Baby = "baby",
Child = "child",
Teen = "teen")
child_age_group <- forcats::fct_relevel(child_age_group, c("Baby", "Child", "Teen", "Default"))
child_gender <- factor(contacts_unflat$fields$survey_behave_sex)
child_gender <- fct_expand(child_gender, "Girl", "Boy", "Prefer not to say")
child_gender <-  forcats::fct_recode(child_gender,
Boy = "male",
Girl = "female",
`Prefer not to say` = "no")
child_gender <- forcats::fct_relevel(child_gender, c("Girl", "Boy", "Prefer not to say"))
parent_child_relationship <- factor(contacts_unflat$fields$survey_behave_relationship)
parent_child_relationship <- fct_expand(parent_child_relationship, "Parent", "Grandparent", "Aunt/Uncle", "Foster Parent", "Other", "Prefer not to say")
parent_child_relationship <- forcats::fct_recode(parent_child_relationship,
Parent = "parent",
Grandparent = "grandparent",
`Aunt/Uncle`= "uncle",
`Foster Parent` = "foster",
Other = "other",
`Prefer not to say`  = "no")
parent_child_relationship <- forcats::fct_relevel(parent_child_relationship,
c("Parent", "Grandparent", "Aunt/Uncle", "Foster Parent", "Other", "Prefer not to say"))
parent_relationship <- factor(contacts_unflat$fields$marital_status)
parent_relationship <- forcats::fct_recode(parent_relationship,
`Prefer not to say`  = "no")
parent_relationship <- fct_expand(parent_relationship, "Single", "Married", "Partnered", "Divorced", "Widowed", "Prefer not to say")
parent_relationship <- forcats::fct_relevel(parent_relationship, c("Single", "Married", "Partnered", "Divorced", "Widowed", "Prefer not to say"))
child_disabilities <- factor(contacts_unflat$fields$has_disability)
child_disabilities <- fct_expand(child_disabilities, "Yes", "No")
child_disabilities <- forcats::fct_recode(child_disabilities,
Yes = "yes",
No = "no",
`supp_disab`= "supp_disab")
child_disabilities <- forcats::fct_relevel(child_disabilities,
c("Yes", "No", "supp_disab"))
recruitment_channel <- factor(contacts_unflat$fields$enrollment)
recruitment_channel <- forcats::fct_expand(recruitment_channel, enrollment_variables)
recruitment_channel <- forcats::fct_recode(recruitment_channel, !!!enrollment_recode)
recruitment_channel <- forcats::fct_relevel(recruitment_channel, enrollment_order)
parenting_goal <- factor(as.numeric(contacts_unflat$fields$parenting_goal))
parenting_goal <- forcats::fct_expand(parenting_goal, c("Relationship","Behaviour", "School", "COVID-19", "Stress", "Finances", "Family conflict", "Safety", "Disabilities", "Other"))
parenting_goal <- forcats::fct_recode(parenting_goal,
`Relationship` = "1",
`Behaviour` = "2",
`School` = "3",
`COVID-19` = "4",
`Stress` = "5",
`Finances` = "6",
`Family conflict` = "7",
`Safety`= "8",
`Disabilities` = "9",
`Other` = "0")
parenting_goal <- forcats::fct_relevel(parenting_goal,
c("Relationship","Behaviour",
"School", "COVID-19",
"Stress", "Finances",
"Family conflict", "Safety",
"Disabilities", "Other"))
parenting_goal_wrap <- str_wrap_factor(parenting_goal, width = 15)
# active users # N = contacts for which the time difference between the current time and the datetime variable "last_seen_on" is less than 24 h
active_users <- difftime(lubridate::now(tzone = "UTC"), as.POSIXct(contacts_unflat$last_seen_on, format="%Y-%m-%dT%H:%M:%OS", tz = "UTC"), units = "hours") <= 24
active_users <- factor(active_users)
if (length(levels(active_users)) == 1){
if (levels(active_users) == "FALSE"){
levels(active_users) <- c(levels(active_users),"TRUE")
} else if (levels(active_users) == "TRUE"){
levels(active_users) <- c(levels(active_users),"FALSE")
}
}
active_users <- forcats::fct_expand(active_users, c("Yes", "No"))
active_users <- forcats::fct_recode(active_users,
"No" = "FALSE",
"Yes" = "TRUE")
active_users <- forcats::fct_relevel(active_users, c("Yes", "No"))
active_users_7_days <- difftime(lubridate::now(tzone = "UTC"), as.POSIXct(contacts_unflat$last_seen_on, format="%Y-%m-%dT%H:%M:%OS", tz = "UTC"), units = "hours") <= 7*24
active_users_7_days <- factor(active_users_7_days)
if (length(levels(active_users_7_days)) == 1){
if (levels(active_users_7_days) == "FALSE"){
levels(active_users_7_days) <- c(levels(active_users_7_days),"TRUE")
} else if (levels(active_users_7_days) == "TRUE"){
levels(active_users_7_days) <- c(levels(active_users_7_days),"FALSE")
}
}
active_users_7_days <- forcats::fct_expand(active_users_7_days, c("Yes", "No"))
active_users_7_days <- forcats::fct_recode(active_users_7_days,
"No" = "FALSE",
"Yes" = "TRUE")
active_users_7_days <- forcats::fct_relevel(active_users_7_days, c("Yes", "No"))
# comp_prog_overall
# TODO: only should be lookign at this for those who consented
comp_prog_overall <- as.numeric(as.character(contacts_unflat$fields$n_skills))
# Participant age etc
# TODO: only should be lookign at this for those who consented
parent_age <- as.numeric(as.character(contacts_unflat$fields$age))
# completed surveys
completed_welcome <- factor(contacts_unflat$fields$completed_welcome)
completed_welcome <- forcats::fct_expand(completed_welcome, c("Yes", "No"))
completed_welcome <- forcats::fct_recode(completed_welcome,
"No" = "no",
"Yes" = "yes")
completed_welcome[is.na(completed_welcome)] <- "No"
completed_welcome <- forcats::fct_relevel(completed_welcome, c("Yes", "No"))
comp_survey_w1 <- str_count(contacts_unflat$fields$surveyparenting_completion, fixed("|"))
if (length(comp_survey_w1) == 0){comp_survey_w1 <- rep(NA, length(enrolled))}
comp_survey_w2 <- str_count(contacts_unflat$fields$surveyparentingbehave_completion, fixed("|")) + 1
if (length(comp_survey_w2) == 0){comp_survey_w2 <- rep(NA, length(enrolled))}
consent_survey_w1 <- c(data.frame(str_split(contacts_unflat$fields$surveyparenting_datestamps, ",", n = 2, simplify = TRUE))[1])$X1
if (length(consent_survey_w1) == 0){consent_survey_w1 <- rep(NA, length(enrolled))}
consent_survey_w1 <- factor(consent_survey_w1)
consent_survey_w1 <- forcats::fct_expand(consent_survey_w1, c("Yes", "No"))
consent_survey_w1 <- forcats::fct_recode(consent_survey_w1,
"No" = "no",
"Yes" = "yes")
#consent_survey_w1[is.na(consent_survey_w1)] <- "Did not interact"
#consent_survey_w1[is.na(consent_survey_w1)] <- "Did not interact"
consent_survey_w1 <- forcats::fct_relevel(consent_survey_w1, c("Yes", "No", "Did not interact"))
survey_consented_wk2_plus <- str_split(contacts_unflat$fields$surveyparentingbehave_datestamps, fixed("|"))
all_split_data <- NULL
if (length(survey_consented_wk2_plus) > 0){
for (j in 1:length(survey_consented_wk2_plus)){
if (is.na(survey_consented_wk2_plus[[j]])){
split_data <- data.frame(V1 = NA, V2 = NA, V3 = NA, row = j)
} else {
split_parenting_2 <- stringr::str_split(survey_consented_wk2_plus[[j]], ",")
split_data <- plyr::ldply(split_parenting_2[1:(length(split_parenting_2)-1)])
split_data <- split_data %>% mutate(row = j)
}
all_split_data[[j]] <- split_data
}
}
survey_consented_wk2_plus_data <- plyr::ldply(all_split_data)
survey_consented_wk2_plus_data$survey_response <- as.numeric(as.factor(survey_consented_wk2_plus_data$V1))
survey_consented_wk2_plus_data$survey_number <- survey_consented_wk2_plus_data$V2
survey_consented_wk2_plus_data$V1 <- NULL
survey_consented_wk2_plus_data$V2 <- NULL
survey_consented_wk2_plus_data$V3 <- NULL
if (nrow(survey_consented_wk2_plus_data) > 0){
survey_consented_wk2_plus_data <- merge(survey_consented_wk2_plus_data, df_created_on, by = "row")
survey_consented_wk2_plus_data_wider <- pivot_wider(survey_consented_wk2_plus_data, id_cols = ID, names_from = survey_number,
values_from = survey_response, names_prefix = "consent_survey_w",
values_fn = mean) # there are several responses for some. So find mean. If they ever consented they we say they did consent
survey_consented_wk2_plus_data_wider <- survey_consented_wk2_plus_data_wider %>%
mutate_at(vars(starts_with("consent_survey_")), round) %>%
mutate_at(vars(starts_with("consent_survey_")), as.factor)
survey_consented_wk2_plus_data_wider <- survey_consented_wk2_plus_data_wider %>%
mutate_at(vars(starts_with("consent_survey_")), ~forcats::fct_recode(.,
"No" = "1",
"Yes" = "2"))
} else {
survey_consented_wk2_plus_data_wider <- NULL
}
challenge_behav <- contacts_unflat$fields$survey_behave_most_challenging
challenge_behav <- dplyr::case_when(
child_age_group == "Baby" & challenge_behav == "1" ~ "Crying",
child_age_group == "Baby" & challenge_behav == "2" ~ "Problems sleeping",
child_age_group == "Baby" & challenge_behav == "3" ~ "Acting clingy",
child_age_group == "Baby" & challenge_behav == "4" ~ "Whining",
child_age_group == "Baby" & challenge_behav == "5" ~ "Bad tempered",
child_age_group == "Baby" & challenge_behav == "6" ~ "Problems eating",
child_age_group == "Baby" & challenge_behav == "7" ~ "Stubborn/fussy",
child_age_group == "Baby" & challenge_behav == "8" ~ "Naughty behaviour",
child_age_group == "Baby" & challenge_behav == "9" ~ "Temper Tantrums",
child_age_group %in% c("Child", "Default", "Teen") & challenge_behav == "1" ~ "Refuses to obey",
child_age_group %in% c("Child", "Default") & challenge_behav == "2" ~ "Gets angry",
child_age_group %in% c("Child", "Default", "Teen") & challenge_behav == "3" ~ "Rude behaviour",
child_age_group %in% c("Child", "Default") & challenge_behav == "4" ~ "Mood swings",
child_age_group %in% c("Child", "Default") & challenge_behav == "5" ~ "Does not follow rules",
child_age_group %in% c("Child", "Default") & challenge_behav == "6" ~ "Stubbornness",
child_age_group %in% c("Child", "Default" ~ "Teen") & challenge_behav == "7" ~ "Breaks things",
child_age_group %in% c("Child", "Default" ~ "Teen") & challenge_behav == "8" ~ "Gets into fights",
child_age_group %in% c("Child", "Default" ~ "Teen") & challenge_behav == "9" ~ "Teases others",
child_age_group %in% c("Teen") & challenge_behav == "2" ~ "Temper Tantrums",
child_age_group %in% c("Teen") & challenge_behav == "4" ~ "Whining",
child_age_group %in% c("Teen") & challenge_behav == "5" ~ "Hyperactivity",
child_age_group %in% c("Teen") & challenge_behav == "6" ~ "Hits others")
challenge_behav <- forcats::fct_expand(challenge_behav, c("Crying", "Problems sleeping", "Acting clingy", "Whining", "Bad tempered", "Problems eating", "Stubborn/fussy", "Naughty behaviour", "Temper Tantrums", "Refuses to obey", "Gets angry", "Rude behaviour", "Mood swings", "Does not follow rules", "Stubbornness", "Breaks things", "Gets into fights", "Teases others", "Hyperactivity", "Hits others"))
challenge_behav <- forcats::fct_relevel(challenge_behav, c("Crying", "Problems sleeping", "Acting clingy", "Whining", "Bad tempered", "Problems eating", "Stubborn/fussy", "Naughty behaviour", "Temper Tantrums", "Refuses to obey", "Gets angry", "Rude behaviour", "Mood swings", "Does not follow rules", "Stubbornness", "Breaks things", "Gets into fights", "Teases others", "Hyperactivity", "Hits others"))
challenge_behav_wrap <- str_wrap_factor(challenge_behav, width = 10)
df <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group, parent_child_relationship,
state_of_origin,
parent_relationship, child_disabilities, recruitment_channel, parenting_goal, parenting_goal_wrap,
active_users, active_users_7_days, comp_prog_overall, next_tip_main, next_tip_morning, next_tip_evening, parent_age, completed_welcome, comp_survey_w1, comp_survey_w2, consent_survey_w1,
challenge_behav, challenge_behav_wrap,
gamification, personalisation, n_messages)
df <- df %>%
mutate(length_in_programme = as.numeric(as.Date(last_online) - as.Date(created_on)) + 1)
df_engagement <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group,
D1S1_welcome, D2S1_1_consent_survey_W1, D2S1_2_complet_survey_W1, D2S1_3_survey_behave__W1,
D2S1_4_complet_behave_W1, D2S2_content_tip, D2S2_toolkit_counts, D2S3_day)
length(ID)
length(D1S1_welcome)
length(D2S1_1_consent_survey_W1)
length(D2S1_2_complet_survey_W1)
length(D2S1_3_survey_behave__W1)
length(D2S1_4_complet_behave_W1)
length(D2S2_content_tip)
length(D2S2_toolkit_counts)
length(D2S3_day)
D2S1_4_complet_behave_W1 <- comp_survey_behave
D2S2_content_tip
#DAY 2 MAIN (or DAY 3 MAIN for 2&1 msgs per day)
content_tip_flow_names_flow <- content_tip_flow_names_flow %>% filter(grepl("One on one time", `.id`))
D2S2_content_tip <- content_tip_flow_names_flow$interacted
D2S2_content_tip <- contacts_unflat$fields$toolkit
D2S2_content_tip
head(D2S2_content_tip)
length(D2S2_content_tip)
#DAY 2 MAIN (or DAY 3 MAIN for 2&1 msgs per day)
content_tip_flow_names_flow <- content_tip_flow_names_flow %>% filter(grepl("One on one time", `.id`))
D2S2_content_tip <- content_tip_flow_names_flow$interacted
contacts_toolkit <- contacts_unflat$fields$toolkit
D2S2_toolkit_counts <- str_count(contacts_toolkit, "One-on-one time")
length(D2S2_content_tip)
D2S2_content_tip
#DAY 2 MAIN (or DAY 3 MAIN for 2&1 msgs per day)
content_tip_flow_names_flow <- content_tip_flow_names_flow %>% filter(grepl("One on one time", `.id`))
D2S2_content_tip <- content_tip_flow_names_flow$interacted
D2S2_content_tip
content_tip_flow_names <- c("PLH - Content - Time - One on one time baby - Timed intro",
"PLH - Content - Time - One on one time child - Timed intro",
"PLH - Content - Time - One on one time teen - Timed intro")
content_tip_flow_names_flow <- get_flow_data(flow_name = content_tip_flow_names, flow_type = "tips", include_archived_data = include_archived_data)
content_tip_flow_names_flow$ID <- content_tip_flow_names_flow$uuid
content_tip_flow_names_flow$uuid <- NULL
content_tip_flow_names_flow <- content_tip_flow_names_flow %>% mutate(Flow = "Content Tip")
content_tip_flow_names_flow$category <- replace_na(content_tip_flow_names_flow$category, "No Response")
content_tip_flow_names_flow
head(content_tip_flow_names_flow)
content_tip_flow_names_flow$interacted
#DAY 2 MAIN (or DAY 3 MAIN for 2&1 msgs per day)
content_tip_flow_names_flow <- content_tip_flow_names_flow %>% filter(grepl("One on one time", `.id`))
nrow(content_tip_flow_names_flow)
content_tip_flow_names_flow <- get_flow_data(flow_name = content_tip_flow_names, flow_type = "tips", include_archived_data = include_archived_data)
content_tip_flow_names_flow$ID <- content_tip_flow_names_flow$uuid
content_tip_flow_names_flow$uuid <- NULL
content_tip_flow_names_flow <- content_tip_flow_names_flow %>% mutate(Flow = "Content Tip")
content_tip_flow_names_flow$category <- replace_na(content_tip_flow_names_flow$category, "No Response")
nrow(content_tip_flow_names_flow)
content_tip_flow_names <- c("PLH - Content - Time - One on one time baby - Timed intro",
"PLH - Content - Time - One on one time child - Timed intro",
"PLH - Content - Time - One on one time teen - Timed intro")
head(content_tip_flow_names_flow)
D2S2_content_tip <- content_tip_flow_names_flow %>% dplyr::select(ID, interacted)
head(D2S2_content_tip)
D2S2_toolkit_counts <- str_count(contacts_toolkit, "One-on-one time")
D2S2_toolkit_counts
head(D2S3_day)
View(D2S2_content_tip)
D2S2_content_tip_data <- content_tip_flow_names_flow %>%
mutate(D2S2_content_tip = interacted) %>%
dplyr::select(ID, `.id`, D2S2_content_tip))
D2S2_content_tip_data <- content_tip_flow_names_flow %>%
mutate(D2S2_content_tip = interacted) %>%
dplyr::select(c(ID, `.id`, D2S2_content_tip))
D2S2_toolkit_counts <- str_count(contacts_toolkit, "One-on-one time")
D2S3_interacted_data <- rbind(D2S3_budget_flow, D2S3_share_flow) %>%
mutate(D2S3_interacted = interacted) %>%
dplyr::select(c(ID, `.id`, D2S3_interacted))
df_engagement <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group,
D1S1_welcome, D2S1_1_consent_survey_W1, D2S1_2_complet_survey_W1, D2S1_3_survey_behave__W1,
D2S1_4_complet_behave_W1, D2S2_content_tip, D2S2_toolkit_counts, D2S3_day)
df_engagement <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group,
D1S1_welcome, D2S1_1_consent_survey_W1, D2S1_2_complet_survey_W1, D2S1_3_survey_behave__W1,
D2S1_4_complet_behave_W1, D2S2_toolkit_counts)
head(df_engagement)
df_engagement <- full_join(df_engagement, D2S2_content_tip_data)
head(df_engagement)
df_engagement <- full_join(df_engagement, D2S3_interacted_data)
head(D2S3_interacted_data)
# CREATE engagement data ---------------
D1S1_welcome <- completed_welcome
D2S1_1_consent_survey_W1 <- consent_survey_w1
D2S1_2_complet_survey_W1 <- comp_survey_w1
D2S1_3_survey_behave__W1 <- survey_behave
D2S1_4_complet_behave_W1 <- comp_survey_behave
D2S2_content_tip_data <- content_tip_flow_names_flow %>%
mutate(D2S2_content_tip = interacted) %>%
dplyr::select(c(ID, D2S2_content_tip))
D2S2_toolkit_counts <- str_count(contacts_toolkit, "One-on-one time")
D2S3_interacted_data <- rbind(D2S3_budget_flow, D2S3_share_flow) %>%
mutate(D2S3_interacted = interacted) %>%
dplyr::select(c(ID, D2S3_interacted))
df_engagement <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group,
D1S1_welcome, D2S1_1_consent_survey_W1, D2S1_2_complet_survey_W1, D2S1_3_survey_behave__W1,
D2S1_4_complet_behave_W1, D2S2_toolkit_counts)
df_engagement <- full_join(df_engagement, D2S2_content_tip_data)
df_engagement <- full_join(df_engagement, D2S3_interacted_data)
head(df_engagement)
df_engagement <- df_engagement %>% filter(consent == "Yes")
nrow(df_engagement)
df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D1S1_yes <- df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
df_engagement $D2S1_1_consent_survey_W1
D2S1_2_complet_survey_W1
df_engagement <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group,
D1S1_welcome, D2S1_1_consent_survey_W1, D2S1_2_complet_survey_W1,
D2S1_3_survey_behave__W1,
D2S1_4_complet_behave_W1, D2S2_toolkit_counts)
D2S1_1_consent_survey_W1
D2S1_2_complet_survey_W1
D2S1_3_survey_behave__W1
D2S1_2_complet_survey_W1
df_engagement %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D1S1_yes <- df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_yes <- df_engagement %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S2_yes <- df_engagement %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S3_yes <- df_engagement %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S4_yes <- df_engagement %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D1S1_yes
1_yes
D2S1_yes
D2S2_yes
D2S3_yes
D2S4_yes
df_engagement$D2S2_toolkit_counts
D2S2_yes <- df_engagement %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D1S1_yes <- df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1_yes <- df_engagement %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2_yes <- df_engagement %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3_yes <- df_engagement %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4_yes <- df_engagement %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_yes <- df_engagement %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_yes
df_engagement$D2S2_content_tip_data
df_engagement
head(df_engagement)
df_engagement <- data.frame(ID, created_on, last_online, enrolled, consent, program, language, parent_gender, child_gender, child_age_group,
D1S1_welcome, D2S1_1_consent_survey_W1, D2S1_2_complet_survey_W1,
D2S1_3_survey_behave__W1, D2S1_4_complet_behave_W1, D2S2_toolkit_counts)
df_engagement <- full_join(df_engagement, D2S2_content_tip_data)
df_engagement <- full_join(df_engagement, D2S3_interacted_data)
head(df_engagement)
D2S3_yes <- df_engagement %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
D1S1_yes <- df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1_yes <- df_engagement %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2_yes <- df_engagement %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3_yes <- df_engagement %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4_yes <- df_engagement %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_yes <- df_engagement %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_yes <- df_engagement %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_yes <- df_engagement %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
D1S1_yes
first_two_days <- function(data = df_engagement, group_by = 1){
D1S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(rbind(D1S1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1))
}
first_two_days()
first_two_days <- function(data = df_engagement, group_by = 1){
D1S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(rbind(D1S1_1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1))
}
first_two_days()
first_two_days <- function(data = df_engagement, group_by = 1){
D1S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(data.frame(D1S1_1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1))
}
first_two_days()
first_two_days <- function(data = df_engagement, group_by = 1){
D1S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(c(D1S1_1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1))
}
first_two_days()
first_two_days <- function(data = df_engagement, group_by = 1){
D1S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% group_by({{ group_by }}) %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(rbind(D1S1_1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1))
}
first_two_days()
first_two_days(group_by = parent_gender)
head(df_engagement)
df_engagement %>% group_by(parent_gender) %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
first_two_days <- function(data = df_engagement){
D1S1_1 <- df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(rbind(D1S1_1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1))
}
first_two_days(group_by = parent_gender)
first_two_days()
data.frame(first_two_days())
as_tibble(first_two_days())
as_tibble(first_two_days(), rownames = "hi")
first_two_days <- function(data = df_engagement){
D1S1_1 <- df_engagement %>% filter(D1S1_welcome == "Yes") %>% nrow(.)
D2S1_1 <- df_engagement %>% filter(D2S1_1_consent_survey_W1 == "Yes") %>% nrow(.)
D2S1_2 <- df_engagement %>% filter(D2S1_2_complet_survey_W1 == 1) %>% nrow(.)
D2S1_3 <- df_engagement %>% filter(D2S1_3_survey_behave__W1 == "Yes") %>% nrow(.)
D2S1_4 <- df_engagement %>% filter(D2S1_4_complet_behave_W1 == 1) %>% nrow(.)
D2S2_1 <- df_engagement %>% filter(D2S2_toolkit_counts == 1) %>% nrow(.)
D2S2_2 <- df_engagement %>% filter(D2S2_content_tip == TRUE) %>% nrow(.)
D2S3_1 <- df_engagement %>% filter(D2S3_interacted == TRUE) %>% nrow(.)
return(as_tibble(rbind(D1S1_1, D2S1_1, D2S1_2, D2S1_3, D2S1_4,
D2S2_1, D2S2_2, D2S3_1), rownames = "session"))
}
first_two_days()
ggplot(first_two_days(), aes(x = as.numeric(session), y = V1)) +
geom_plot
ggplot(first_two_days(), aes(x = as.numeric(session), y = V1)) +
geom_point()
first_two_days() %>% mutate(session = factor(session))
df_engage_data <- first_two_days() %>% mutate(session = factor(session))
df_engage_data <- first_two_days() %>% mutate(session = factor(session))
df_engage_data
as.numeric(df_engage_data$session)
df_engage_data <- first_two_days() %>% mutate(session = as.numeric(factor(session)))
ggplot(df_engage_data, aes(x = as.numeric(session), y = V1)) +
geom_point()
ggplot(df_engage_data, aes(x = session, y = V1)) +
geom_point()
